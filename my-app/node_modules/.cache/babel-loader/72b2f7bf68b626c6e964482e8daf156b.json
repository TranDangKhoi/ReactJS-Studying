{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP Victus\\\\Documents\\\\GitHub\\\\Contain All (Github)\\\\Evondev-ReactJS-Course\\\\my-app\\\\src\\\\components\\\\Tictactoe (useReducer version)\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from \"react\";\nimport { winnerCalculate } from \"../helper\";\nimport Board from \"./Board\";\nimport \"./GameStyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  board: Array(9).fill(null),\n  xIsNext: true\n}; // immutable state (không thể chỉnh sửa state)\n// muốn sửa thì tạo ra một bản clone\n\nconst gameReducer = (state, action) => {\n  switch (action.type) {\n    case \"Click\":\n      console.log(state, action.payload);\n      break;\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nconst Game = () => {\n  _s();\n\n  // const [board, setBoard] = useState(Array(9).fill(null));\n  // const [xIsNext, setXIsNext] = useState(true); // true thì sẽ đánh X, false sẽ đánh O\n  const [state, dispatch] = useReducer(gameReducer, initialState); // const action = {type:\"Click\", payload{}}\n  // dispatch({type: \"Click\"})\n  // const [state, setState] = useState({\n  //   board: Array(9).fill(null),\n  //   xIsNext: true,\n  // });\n\n  const winner = winnerCalculate(state.board);\n\n  const handleClick = index => {\n    const boardCopy = [...state.board];\n\n    if (winner || boardCopy[index]) {\n      return;\n    } // dispatch(action) -> action này được truyền vào hàm gameReducer ở bên trên\n\n\n    dispatch({\n      type: \"Click\",\n      payload: {\n        index // index : index\n\n      }\n    }); // boardCopy[index] = xIsNext ? \"X\" : \"O\"; // nếu X là lượt đánh tiếp theo thì thay đổi lần click tiếp theo giá trị là X, còn không thì là O\n    // Viết kiểu dài dòng\n\n    if (state.xIsNext === true) {\n      boardCopy[index] = \"X\";\n    } else {\n      boardCopy[index] = \"O\";\n    } // setBoard(boardCopy);\n    // setXIsNext((xIsNext) => !xIsNext);\n    // setState({\n    //   ...state,\n    //   board: boardCopy,\n    //   xIsNext: !state.xIsNext,\n    // });\n    // console.log(state);\n\n  };\n\n  const handleReset = () => {// setState({\n    //   board: Array(9).fill(null),\n    //   xIsNext: true,\n    //   ...state,\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      cells: state.board,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-winner\",\n      children: winner ? `Winner is ${winner}` : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"game-reset\",\n      onClick: handleReset,\n      children: \"Reset game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useReducer","useState","winnerCalculate","Board","initialState","board","Array","fill","xIsNext","gameReducer","state","action","type","console","log","payload","Game","dispatch","winner","handleClick","index","boardCopy","handleReset"],"sources":["C:/Users/HP Victus/Documents/GitHub/Contain All (Github)/Evondev-ReactJS-Course/my-app/src/components/Tictactoe (useReducer version)/Game.js"],"sourcesContent":["import React, { useReducer, useState } from \"react\";\r\nimport { winnerCalculate } from \"../helper\";\r\nimport Board from \"./Board\";\r\nimport \"./GameStyle.css\";\r\n\r\nconst initialState = {\r\n  board: Array(9).fill(null),\r\n  xIsNext: true,\r\n};\r\n// immutable state (không thể chỉnh sửa state)\r\n// muốn sửa thì tạo ra một bản clone\r\nconst gameReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"Click\":\r\n      console.log(state, action.payload);\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n\r\nconst Game = () => {\r\n  // const [board, setBoard] = useState(Array(9).fill(null));\r\n  // const [xIsNext, setXIsNext] = useState(true); // true thì sẽ đánh X, false sẽ đánh O\r\n  const [state, dispatch] = useReducer(gameReducer, initialState);\r\n  // const action = {type:\"Click\", payload{}}\r\n  // dispatch({type: \"Click\"})\r\n  // const [state, setState] = useState({\r\n  //   board: Array(9).fill(null),\r\n  //   xIsNext: true,\r\n  // });\r\n  const winner = winnerCalculate(state.board);\r\n  const handleClick = (index) => {\r\n    const boardCopy = [...state.board];\r\n    if (winner || boardCopy[index]) {\r\n      return;\r\n    }\r\n    // dispatch(action) -> action này được truyền vào hàm gameReducer ở bên trên\r\n    dispatch({\r\n      type: \"Click\",\r\n      payload: {\r\n        index, // index : index\r\n      },\r\n    });\r\n\r\n    // boardCopy[index] = xIsNext ? \"X\" : \"O\"; // nếu X là lượt đánh tiếp theo thì thay đổi lần click tiếp theo giá trị là X, còn không thì là O\r\n    // Viết kiểu dài dòng\r\n    if (state.xIsNext === true) {\r\n      boardCopy[index] = \"X\";\r\n    } else {\r\n      boardCopy[index] = \"O\";\r\n    }\r\n    // setBoard(boardCopy);\r\n    // setXIsNext((xIsNext) => !xIsNext);\r\n    // setState({\r\n    //   ...state,\r\n    //   board: boardCopy,\r\n    //   xIsNext: !state.xIsNext,\r\n    // });\r\n    // console.log(state);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    // setState({\r\n    //   board: Array(9).fill(null),\r\n    //   xIsNext: true,\r\n    //   ...state,\r\n    // });\r\n  };\r\n  return (\r\n    <div>\r\n      <Board cells={state.board} onClick={handleClick}></Board>\r\n      <div className=\"game-winner\">{winner ? `Winner is ${winner}` : \"\"}</div>\r\n      <button className=\"game-reset\" onClick={handleReset}>\r\n        Reset game\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,iBAAP;;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CADY;EAEnBC,OAAO,EAAE;AAFU,CAArB,C,CAIA;AACA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,OAAL;MACEC,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAAmBC,MAAM,CAACI,OAA1B;MACA;;IAEF;MACE;EANJ;;EAQA,OAAOL,KAAP;AACD,CAVD;;AAYA,MAAMM,IAAI,GAAG,MAAM;EAAA;;EACjB;EACA;EACA,MAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBjB,UAAU,CAACS,WAAD,EAAcL,YAAd,CAApC,CAHiB,CAIjB;EACA;EACA;EACA;EACA;EACA;;EACA,MAAMc,MAAM,GAAGhB,eAAe,CAACQ,KAAK,CAACL,KAAP,CAA9B;;EACA,MAAMc,WAAW,GAAIC,KAAD,IAAW;IAC7B,MAAMC,SAAS,GAAG,CAAC,GAAGX,KAAK,CAACL,KAAV,CAAlB;;IACA,IAAIa,MAAM,IAAIG,SAAS,CAACD,KAAD,CAAvB,EAAgC;MAC9B;IACD,CAJ4B,CAK7B;;;IACAH,QAAQ,CAAC;MACPL,IAAI,EAAE,OADC;MAEPG,OAAO,EAAE;QACPK,KADO,CACA;;MADA;IAFF,CAAD,CAAR,CAN6B,CAa7B;IACA;;IACA,IAAIV,KAAK,CAACF,OAAN,KAAkB,IAAtB,EAA4B;MAC1Ba,SAAS,CAACD,KAAD,CAAT,GAAmB,GAAnB;IACD,CAFD,MAEO;MACLC,SAAS,CAACD,KAAD,CAAT,GAAmB,GAAnB;IACD,CAnB4B,CAoB7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EACD,CA5BD;;EA8BA,MAAME,WAAW,GAAG,MAAM,CACxB;IACA;IACA;IACA;IACA;EACD,CAND;;EAOA,oBACE;IAAA,wBACE,QAAC,KAAD;MAAO,KAAK,EAAEZ,KAAK,CAACL,KAApB;MAA2B,OAAO,EAAEc;IAApC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,aAAf;MAAA,UAA8BD,MAAM,GAAI,aAAYA,MAAO,EAAvB,GAA2B;IAA/D;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,SAAS,EAAC,YAAlB;MAA+B,OAAO,EAAEI,WAAxC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAzDD;;GAAMN,I;;KAAAA,I;AA2DN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}